<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 핵심관심모듈의 클래스를 Spring Bean으로 등록 -->
	<bean class="xyz.itwill07.aop.JoinPointBean" id="joinPointBean" />

	<!-- 횡단관심모듈의 클래스를 Spring Bean으로 등록 -->
	<bean class="xyz.itwill07.aop.JoinPointAdvice"
		id="joinPointAdvice" />

	<aop:config>
		<aop:aspect ref="joinPointAdvice">
			<aop:before method="beforeDisplay"
				pointcut="execution(* *(..))" />
			<aop:after method="displayMessage"
				pointcut="execution(void remove(int))" />
			<!-- returning 속성 : 타겟메소드의 반환값을 전달받아 저장하기 위한 After Returning Advice Method의 
				매개변수 이름을 속성값으로 설정 -->
			<aop:after-returning method="displayName"
				pointcut="execution(java.lang.String getName())" returning="object" />
			<!-- throwing 속성 : 타겟메소드에서 발생된 예외를 전달받아 저장하기 위한 After Throwing Advice 
				Method의 매개변수 이름을 속성값으로 설정 -->
			<aop:after-throwing method="exceptionHandle"
				pointcut="execution(void calc(int, int))" throwing="exception" />
			<aop:around method="display"
				pointcut="execution(* modify(..))" />
		</aop:aspect>
	</aop:config>
</beans>